services:
    db:
        image: kartoza/postgis:15-3.3
        env_file:
            - .env.prod
        ports:
            - "5432:5432"
        volumes:
            - postgres_data:/var/lib/postgresql/data
        restart: unless-stopped
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB" ]
            start_period: 30s
            interval: 15s
            timeout: 10s
            retries: 5

    redis:
        image: redis:7.2-alpine
        ports:
            - "6380:6379"
        volumes:
            - redis_data:/data
            - ./redis.conf:/usr/local/etc/redis/redis.conf
        env_file:
            - .env.prod
        command: redis-server /usr/local/etc/redis/redis.conf
        restart: unless-stopped
        healthcheck:
            test: [ "CMD", "redis-cli", "ping" ]
            start_period: 30s
            interval: 15s
            timeout: 3s
            retries: 5

    web:
        build:
            context: .
            dockerfile: docker/Dockerfile
        ports:
            - "8000:8000"
        env_file:
            - .env.prod
        environment:
            - DJANGO_SETTINGS_MODULE=project.settings.production
        volumes:
            - static_volume:/app/htdocs/static
            - media_volume:/app/htdocs/media
        depends_on:
            db:
                condition: service_healthy
            redis:
                condition: service_healthy
        restart: unless-stopped
        healthcheck:
            test: [ "CMD", "python", "/app/healthcheck.py" ]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 40s

volumes:
    postgres_data:
    redis_data:
    static_volume:
    media_volume:
